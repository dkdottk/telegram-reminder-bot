"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorResponse = exports.inProcessResponseToLambdaResponse = void 0;
const fixResponseHeaders_1 = __importDefault(require("./fixResponseHeaders"));
const isutf8_1 = __importDefault(require("isutf8"));
exports.inProcessResponseToLambdaResponse = (response, supportMultiHeaders, supportCookies) => {
    const encoding = getEncoding(response);
    return Object.assign({ statusCode: response.statusCode, body: response.body.toString(encoding), isBase64Encoded: encoding === 'base64' }, fixResponseHeaders_1.default(response.headers, supportMultiHeaders, supportCookies));
};
const getEncoding = (response) => {
    // APi Gateway REST API cannot handle html responses encoded as base64
    if (response.isUTF8) {
        return 'utf8';
    }
    const contentType = (response.headers['content-type'] || '').toLowerCase();
    const isJson = () => contentType.startsWith('application/json');
    const isText = () => contentType.startsWith('text/');
    const maybeUtf8 = isJson() || isText();
    if (maybeUtf8 && isutf8_1.default(response.body)) {
        return 'utf8';
    }
    return 'base64';
};
exports.errorResponse = () => {
    return {
        statusCode: 500,
        multiValueHeaders: {},
        body: '',
        isBase64Encoded: false
    };
};
